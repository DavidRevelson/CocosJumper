{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","leftButton","Node","rightButton","colorfulPlayer","node","runAction","sequence","tintTo","delayTime","repeatForever","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","id","audioEngine","playEffect","setVolume","onKeyDown","event","keyCode","macro","KEY","a","left","accLeft","d","right","accRight","onKeyUp","onLoad","jumpAction","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","start","update","dt","TOUCH_START","TOUCH_END","TOUCH_CANCEL","scaleX","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        jumpHeight: 0,\r\n        jumpDuration: 0,\r\n        maxMoveSpeed: 0,\r\n        accel: 0,\r\n\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n\r\n        leftButton: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        rightButton: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n\r\n    },\r\n\r\n    colorfulPlayer() {\r\n\r\n        this.node.runAction(cc.sequence(\r\n            cc.tintTo(2, 255, 0, 0),\r\n            cc.delayTime(0.5),\r\n            cc.tintTo(2, 255, 255, 255)\r\n        ).repeatForever());\r\n\r\n    },\r\n\r\n\r\n    setJumpAction: function () {\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n\r\n\r\n        // sound: add a callback function to invoke other defined methods after the action is finished\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n\r\n    playJumpSound: function () {\r\n        // invoke sound engine to play the sound\r\n        var id = cc.audioEngine.playEffect(this.jumpAudio, false);\r\n        cc.audioEngine.setVolume(id, 0.1);\r\n    },\r\n\r\n    onKeyDown(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n            case cc.macro.KEY.left:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n            case cc.macro.KEY.right:\r\n                this.accRight = true;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n            case cc.macro.KEY.left:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n            case cc.macro.KEY.right:\r\n                this.accRight = false;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n\r\n    onLoad: function () {\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        this.colorfulPlayer();\r\n\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n\r\n\r\n        this.xSpeed = 0;\r\n\r\n\r\n\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n\r\n\r\n    },\r\n\r\n    onDestroy() {\r\n        // Cancel keyboard input monitoring\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n\r\n    update: function (dt) {\r\n        // update speed of each frame according to the current acceleration direction\r\n\r\n        if (this.leftButton) {\r\n            this.leftButton.on(cc.Node.EventType.TOUCH_START, event => {\r\n                this.accLeft = true;\r\n            });\r\n            this.leftButton.on(cc.Node.EventType.TOUCH_END, event => {\r\n                this.accLeft = false;\r\n            });\r\n            this.leftButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\r\n                this.accLeft = false;\r\n            });\r\n        }\r\n\r\n        if (this.rightButton) {\r\n            this.rightButton.on(cc.Node.EventType.TOUCH_START, event => {\r\n                this.accRight = true;\r\n            });\r\n            this.rightButton.on(cc.Node.EventType.TOUCH_END, event => {\r\n                this.accRight = false;\r\n            });\r\n            this.rightButton.on(cc.Node.EventType.TOUCH_CANCEL, event => {\r\n                this.accRight = false;\r\n            });\r\n        }\r\n\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n            this.node.scaleX = -1;\r\n        } else if (this.accRight) {\r\n            this.node.scaleX = 1;\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // restrict the movement speed of the main character to the maximum movement speed\r\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // update the position of the main character according to the current speed\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n\r\n\r\n\r\n});\r\n"]}